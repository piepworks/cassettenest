name: Run tests and check coverage
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest

    # Set things up and run the tests.
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.5.0
        with:
          node-version: 18
      - name: Install dependencies, run tests, generate report
        run: |
          python3 -m venv --prompt . venv
          venv/bin/pip install -U pip setuptools wheel
          venv/bin/python -m pip install -r requirements.txt
          venv/bin/python manage.py migrate --noinput
          npm install
          npm run build
          venv/bin/playwright install
          venv/bin/python manage.py collectstatic --noinput
          venv/bin/coverage run venv/bin/pytest inventory/tests --runplaywright --screenshot only-on-failure
          venv/bin/coverage xml
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          CSRF_TRUSTED_ORIGINS: ${{ secrets.CSRF_TRUSTED_ORIGINS }}
          MARKETING_SITE_URL: ${{ secrets.MARKETING_SITE_URL }}
          EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
          SUBSCRIPTION_TRIAL: ${{ secrets.SUBSCRIPTION_TRIAL }}
          SUBSCRIPTION_TRIAL_DURATION: ${{ secrets.SUBSCRIPTION_TRIAL_DURATION }}
          PADDLE_LIVE_MODE: ${{ secrets.PADDLE_LIVE_MODE }}
          PADDLE_VENDOR_ID: ${{ secrets.PADDLE_VENDOR_ID }}
          PADDLE_VENDOR_AUTH_CODE: ${{ secrets.PADDLE_VENDOR_AUTH_CODE }}
          PADDLE_STANDARD_MONTHLY: ${{ secrets.PADDLE_STANDARD_MONTHLY }}
          PADDLE_STANDARD_ANNUAL: ${{ secrets.PADDLE_STANDARD_ANNUAL }}
          PADDLE_AWESOME_ANNUAL: ${{ secrets.PADDLE_AWESOME_ANNUAL }}
          PADDLE_PUBLIC_KEY: ${{ secrets.PADDLE_PUBLIC_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_SAMPLE_RATE: ${{ env.SENTRY_SAMPLE_RATE }}
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-results
          path: test-results/
          retention-days: 2
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
